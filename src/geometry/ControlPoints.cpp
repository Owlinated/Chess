#include <iostream>

#include "ControlPoints.h"
#include "src/Objects.h"

ControlPoints::ControlPoints() : theme_id_() {

}

void ControlPoints::SetTheme(int themeID) {
  theme_id_ = themeID;
}

std::vector<std::vector<glm::vec2>> ControlPoints::GetControlPoints2D(int objectsID) const
{
  switch (objectsID) {
  case objects::table:
    return std::vector<std::vector<glm::vec2>> {
      // profile curve
      std::vector<glm::vec2> { glm::vec2(0, -11), glm::vec2(0, -11), glm::vec2(-1, -11), glm::vec2(-5.3205212137418449f, -11), glm::vec2(-5.6477394146107711f, -11), glm::vec2(-5.9749576154796973f, -11), glm::vec2(-6.0030008089878226f, -10.961718442663983f), glm::vec2(-6, -10.866903039956139f), glm::vec2(-5.9969991910121943f, -10.772087637248241f), glm::vec2(-4.8664403909720662f, -10.76662015972593f), glm::vec2(-4.7736469016461536f, -10.758104602964087f), glm::vec2(-4.6808534123202286f, -10.749589046202233f), glm::vec2(-4.4798894628650627f, -10.697709022953596f), glm::vec2(-4.4771103654656086f, -10.589074978204927f), glm::vec2(-4.4743312680661615f, -10.480440933456263f), glm::vec2(-3.7029888302583789f, -10.352280916843839f), glm::vec2(-3.5686414909251694f, -10.355706826946832f), glm::vec2(-3.4342941515919629f, -10.359132737049828f), glm::vec2(-3.3769462238203038f, -10.222353597656493f), glm::vec2(-3.3769462238203038f, -10.105669522027444f), glm::vec2(-3.3769462238203038f, -9.9889854463983951f), glm::vec2(-3.0185594201025157f, -9.9639817159064599f), glm::vec2(-2.6184997322314962f, -9.938977985414521f), glm::vec2(-2.2184400443604768f, -9.9139742549225822f), glm::vec2(-2.2235692129100664f, -9.7345624535243687f), glm::vec2(-1.7201185298923378f, -9.4828371120155062f), glm::vec2(-1.2166678468746093f, -9.2311117705066437f), glm::vec2(-1.1597382111785606f, -7.7778092266779373f), glm::vec2(-1.1538653357911794f, -7.5923216667026043f), glm::vec2(-1.1479924604037997f, -7.4068341067272616f), glm::vec2(-0.87529688854639154f, -7.4990224635976928f), glm::vec2(-0.87149811104759944f, -7.3466385422466072f), glm::vec2(-0.86769933354880713f, -7.1942546208955207f), glm::vec2(-1.1212845021669193f, -7.0751315953777807f), glm::vec2(-1.1212845021669193f, -6.8144849263837068f), glm::vec2(-1.1212845021669193f, -6.553838257389633f), glm::vec2(-0.67038042521780472f, -6.5152775194293664f), glm::vec2(-0.70469736010090323f, -6.2521810186589288f), glm::vec2(-0.73901429498400173f, -5.9890845178884913f), glm::vec2(-0.96779386087134123f, -5.6796601467339931f), glm::vec2(-0.96779386087134123f, -5.4972084512307138f), glm::vec2(-0.96779386087134123f, -5.3147567557274353f), glm::vec2(-2.9886800262002797f, -5.1540391010733355f), glm::vec2(-2.9810540406799126f, -4.0558971861404878f), glm::vec2(-2.973428055159546f, -2.9577552712076374f), glm::vec2(-1.5128386635190096f, -2.4581709129932752f), glm::vec2(-1.5082663752672101f, -2.3400504419854564f), glm::vec2(-1.503694087015411f, -2.2219299709776386f), glm::vec2(-1.3569273042767893f, -2.2152451031775051f), glm::vec2(-1.357810968533637f, -1.9722705588589426f), glm::vec2(-1.3586946327904859f, -1.7292960145403797f), glm::vec2(-1.7311945191563638f, -1.9141295568021863f), glm::vec2(-1.7339494853675701f, -1.5459802397804852f), glm::vec2(-1.7367044515787757f, -1.1778309227587835f), glm::vec2(-2, -0.72275279907404522f), glm::vec2(-3, -0.72275279907404522f), glm::vec2(-4, -0.72275279907404522f), glm::vec2(-10.641111124343858f, -1), glm::vec2(-11, -1), glm::vec2(-11.358888875656145f, -1), glm::vec2(-11.471951456441982f, -0.95357422265739566f), glm::vec2(-11.469445611477161f, -0.75339479463173664f), glm::vec2(-11.46693976651234f, -0.55321536660607762f), glm::vec2(-11.426453740644934f, -0.47175692616201098f), glm::vec2(-11.275982192732146f, -0.46100895845395512f), glm::vec2(-11.125510644819357f, -0.45026099074589926f), glm::vec2(-11.055648854716992f, -0.40726911991367293f), glm::vec2(-11.055648854716992f, -0.229927652730744f), glm::vec2(-11.055648854716992f, -0.052586185547815079f), glm::vec2(-10.992101193904984f, 0), glm::vec2(-10.682101192148997f, 0), glm::vec2(-10.372101190393082f, 0), glm::vec2(-4, 0), glm::vec2(0, 0), glm::vec2(0, 0), glm::vec2(0, 0) }
    };
  case objects::clock_base:
    return std::vector<std::vector<glm::vec2>> {
      // profile curve
      std::vector<glm::vec2> { glm::vec2(0, 3), glm::vec2(0, 3), glm::vec2(-2.6815594282212118f, 3), glm::vec2(-10, 2), glm::vec2(-11, 2), glm::vec2(-12, 2), glm::vec2(-12, 2), glm::vec2(-12, 3), glm::vec2(-12, 4), glm::vec2(-13, 8), glm::vec2(-13, 10), glm::vec2(-13, 12), glm::vec2(-12, 14), glm::vec2(-8, 14), glm::vec2(-4, 14), glm::vec2(-4, 12), glm::vec2(0, 12), glm::vec2(4, 12), glm::vec2(4, 14), glm::vec2(8, 14), glm::vec2(12, 14), glm::vec2(13, 12), glm::vec2(13, 10), glm::vec2(13, 8), glm::vec2(12, 4), glm::vec2(12, 3), glm::vec2(12, 2), glm::vec2(12, 2), glm::vec2(11, 2), glm::vec2(10, 2), glm::vec2(3, 3), glm::vec2(0, 3), glm::vec2(0, 3) },
        // compressed profile
        std::vector<glm::vec2> { glm::vec2(0, 8), glm::vec2(0, 8), glm::vec2(0, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(-13, 8), glm::vec2(0, 8), glm::vec2(0, 8), glm::vec2(0, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(13, 8), glm::vec2(0, 8), glm::vec2(0, 8), glm::vec2(0, 8) }
    };
  case objects::clock_leg:
    return std::vector<std::vector<glm::vec2>> {
      // profile curve
      std::vector<glm::vec2> { glm::vec2(-0, 0), glm::vec2(-0, 0), glm::vec2(-0.10131380163712704f, 0), glm::vec2(-0.59223721364432291f, 0.34060361392782473f), glm::vec2(-0.59223721364432291f, 0.60748067506123926f), glm::vec2(-0.59223721364432291f, 0.87435773619465373f), glm::vec2(-0.47470829970624101f, 0.88385747378430257f), glm::vec2(-0.47470829970624101f, 1.1562940233415273f), glm::vec2(-0.47470829970624101f, 1.4287305728987523f), glm::vec2(-1.0052381891717905f, 1.4066123493981428f), glm::vec2(-1.0052381891717905f, 1.8546294782462187f), glm::vec2(-1.0052381891717905f, 2.2578448942094873f), glm::vec2(-0.64324371235326938f, 2.2155244987519338f), glm::vec2(-0.43251053335447065f, 2.4733268182944776f), glm::vec2(-0.40909573568793756f, 2.501971520465871f), glm::vec2(-0.38754836145127758f, 2.5343214413409694f), glm::vec2(-0.36764789985145552f, 2.5687729818626535f), glm::vec2(-0.34774743825163346f, 2.6032245223843375f), glm::vec2(-0.32949388928864937f, 2.6397776825526069f), glm::vec2(-0.31121696325302506f, 2.6762878602671862f), glm::vec2(-0.14672462893240582f, 3.0048794596984001f), glm::vec2(-0.088247481160365029f, 3.2586523097112248f), glm::vec2(-0, 3.6521334269321217f), glm::vec2(-0, 3.6521334269321217f) }
    };
  case objects::clock_button:
    return std::vector<std::vector<glm::vec2>> {
      // profile curve
      std::vector<glm::vec2> { glm::vec2(-1, 0), glm::vec2(-1, 0), glm::vec2(-1, 1), glm::vec2(-1, 3), glm::vec2(-1, 4), glm::vec2(-1, 5), glm::vec2(-1, 5), glm::vec2(-2, 5), glm::vec2(-3, 5), glm::vec2(-3, 5), glm::vec2(-3, 6), glm::vec2(-3, 7), glm::vec2(-3, 7), glm::vec2(-2, 7), glm::vec2(-1, 7), glm::vec2(-1, 7), glm::vec2(0, 7), glm::vec2(0, 7) }
    };
  case objects::clock_button_border:
    return std::vector<std::vector<glm::vec2>> {
      // profile curve
      std::vector<glm::vec2> { glm::vec2(-0.60276573197796912f, 0), glm::vec2(-0.60276573197796912f, 0), glm::vec2(-0.60276573197796912f, 0.34824072284560492f), glm::vec2(-0.60276573197796912f, 0.34824072284560492f), glm::vec2(-0.4458958658393728f, 0.34824072284560492f), glm::vec2(-0.28902599970077469f, 0.34824072284560492f), glm::vec2(-0.28902599970077469f, 0.34824072284560492f), glm::vec2(-0.28902599970077469f, 0), glm::vec2(-0.28902599970077469f, 0)}
    };
  case objects::clock_face:
    return std::vector<std::vector<glm::vec2>> {
      // profile curve
      std::vector<glm::vec2> { glm::vec2(-1, 0), glm::vec2(-1, 0), glm::vec2(-1, 0), glm::vec2(-0.60276573197796912f, 0), glm::vec2(-0.4458958658393728f, 0), glm::vec2(-0.28902599970077469f, 0), glm::vec2(-0.28902599970077469f, 0), glm::vec2(0, 0), glm::vec2(0, 0)}
    };
  case objects::clock_glass_border:
    return std::vector<std::vector<glm::vec2>> {
      // profile curve
      std::vector<glm::vec2> { glm::vec2(-5.0532310409224719f, 0), glm::vec2(-5.0532310409224719f, 0), glm::vec2(-5.0532310409224719f, 0.75001274461941558f), glm::vec2(-5.0532310409224719f, 0.75001274461941558f), glm::vec2(-4.7153773921898052f, 0.75001274461941558f), glm::vec2(-4.377523743457135f, 0.75001274461941558f), glm::vec2(-4.377523743457135f, 0.75001274461941558f), glm::vec2(-4.377523743457135f, 0), glm::vec2(-4.377523743457135f, 0)}
    };
  case objects::white_minutes_hand:
  case objects::black_minutes_hand:
    return std::vector<std::vector<glm::vec2>> {
      std::vector<glm::vec2> { glm::vec2(-0.2f, 0), glm::vec2(-0.2f, 0), glm::vec2(-0.2f, 1), glm::vec2(-0.2f, 5), glm::vec2(-0.2f, 7), glm::vec2(-0.2f, 10), glm::vec2(-0.2f, 10) }
    };
  case objects::clock_time_cap:
  case objects::clock_marks:
    return std::vector<std::vector<glm::vec2>> {
      std::vector<glm::vec2> { glm::vec2(-0.2f, 9), glm::vec2(-0.2f, 9), glm::vec2(-0.2f, 13), glm::vec2(-0.2f, 14), glm::vec2(-0.2f, 15), glm::vec2(-0.2f, 16), glm::vec2(-0.2f, 18) }
    };
  case objects::white_seconds_hand:
  case objects::black_seconds_hand:
    return std::vector<std::vector<glm::vec2>> {
      std::vector<glm::vec2> { glm::vec2(-0.2f, 0), glm::vec2(-0.2f, 0), glm::vec2(-0.2f, 1), glm::vec2(-0.2f, 5), glm::vec2(-0.2f, 7), glm::vec2(-0.2f, 10), glm::vec2(-0.2f, 10) }
    };
  default:break;
  }

  switch (theme_id_) {
  case themes::wood:
    switch (objectsID) {
    case objects::white_pawn:
    case objects::black_pawn:
      return std::vector<std::vector<glm::vec2>> {
        // profile curve
        std::vector<glm::vec2> { glm::vec2(0, 0), glm::vec2(0, 0), glm::vec2(-3, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-5.4662712226139023f, -0.033008050461676319f), glm::vec2(-5.5098931476299731f, 0.98483686657995761f), glm::vec2(-5.5535150726460438f, 2.0026817836215915f), glm::vec2(-4.9573487640930853f, 1.6973283085091007f), glm::vec2(-4.9282674807490388f, 1.9008972919174285f), glm::vec2(-4.8991861974049922f, 2.1044662753257564f), glm::vec2(-5.5244337893019964f, 2.1480882003418258f), glm::vec2(-5.5098931476299731f, 2.9914454173191802f), glm::vec2(-5.4953525059579498f, 3.8348026342965347f), glm::vec2(-4.3819485250015262f, 4.647338934778638f), glm::vec2(-4.0446056223701383f, 5.2405971428545435f), glm::vec2(-3.9591847610745941f, 5.3908200368570514f), glm::vec2(-3.6196903296937091f, 6.0674604928225291f), glm::vec2(-3.3405943611651159f, 6.060676705401022f), glm::vec2(-3.2043868581781383f, 6.0573660063954087f), glm::vec2(-2.7963753717609756f, 6.9122038707861533f), glm::vec2(-2.5380171879900324f, 7.9212065180491535f), glm::vec2(-2.2461500399286161f, 9.0610764487967934f), glm::vec2(-2.1104036297850723f, 10.397694756716207f), glm::vec2(-2.1219236380485325f, 10.916095128571909f), glm::vec2(-2.1510049213925795f, 12.224752879054012f), glm::vec2(-2.2673300547687676f, 12.471943787478411f), glm::vec2(-2.5872241715532804f, 12.73367533757483f), glm::vec2(-2.9071182883377933f, 12.995406887671249f), glm::vec2(-3.8377193553472901f, 13.242597796095646f), glm::vec2(-3.823178713675266f, 13.460707421175997f), glm::vec2(-3.8086380720032418f, 13.678817046256347f), glm::vec2(-3.125227913418144f, 13.766060896288483f), glm::vec2(-2.9071182883377933f, 13.867845387992649f), glm::vec2(-2.6890086632574426f, 13.969629879696814f), glm::vec2(-2.5581428882092356f, 14.216820788121211f), glm::vec2(-2.4418177548330475f, 14.362227204841444f), glm::vec2(-2.3254926214568594f, 14.507633621561677f), glm::vec2(-2.1219236380485325f, 14.449471054873582f), glm::vec2(-2.1219236380485325f, 14.580336829921794f), glm::vec2(-2.1219236380485325f, 14.711202604970007f), glm::vec2(-2.3928325698473909f, 15.071360062930072f), glm::vec2(-2.6382140326680057f, 15.36581781831481f), glm::vec2(-2.8835954954886205f, 15.660275573699547f), glm::vec2(-3.0799006657451118f, 16.380061197973351f), glm::vec2(-3.0799006657451118f, 16.88718288780262f), glm::vec2(-3.0799006657451118f, 17.394304577631889f), glm::vec2(-2.8018016745484173f, 18.457624249854554f), glm::vec2(-2.1147335786506969f, 19.013822232247946f), glm::vec2(-1.4276654827529764f, 19.570020214641339f), glm::vec2(-1.0554243042660874f, 19.826208036205845f), glm::vec2(-0.63333663131080264f, 19.916655394696264f), glm::vec2(-0.21124895835551794f, 20.007102753186683f), glm::vec2(-0.12080159986510131f, 20.157848350670719f), glm::vec2(-0.090652480368294874f, 20.32366850790315f), glm::vec2(-0.060503360871488443f, 20.489488665135582f), glm::vec2(0, 21), glm::vec2(0, 21) }
      };
    case objects::white_rook:
    case objects::black_rook:
      return std::vector<std::vector<glm::vec2>> {
        // large curve
        std::vector<glm::vec2> { glm::vec2(0, 0), glm::vec2(0, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-6, 0), glm::vec2(-6.1892898868811956f, -0.025995629009733179f), glm::vec2(-6.1892898868811956f, 0.22328099879551819f), glm::vec2(-6.1892898868811956f, 0.47255762660076955f), glm::vec2(-6.4053296309790788f, 0.50579451030813338f), glm::vec2(-6.4053296309790788f, 1.0043477659186344f), glm::vec2(-6.4053296309790788f, 1.5029010215291354f), glm::vec2(-6.0064870264906789f, 1.7854145330417523f), glm::vec2(-5.9898685846369961f, 1.984835835285951f), glm::vec2(-5.9732501427833133f, 2.1842571375301496f), glm::vec2(-6.4053296309790797f, 2.4169153234817156f), glm::vec2(-6.4385665146864461f, 2.9819423465069477f), glm::vec2(-6.4718033983938126f, 3.5469693695321798f), glm::vec2(-5.6408813057096472f, 4.3446545785089778f), glm::vec2(-5.2420387012212482f, 5.0758660200710439f), glm::vec2(-5.0511773238564297f, 5.4257785452398783f), glm::vec2(-4.3960827447022988f, 6.7010359049466022f), glm::vec2(-4.1841962013526057f, 6.7013443660194518f), glm::vec2(-3.9533038966585545f, 6.7016804953785529f), glm::vec2(-3.4421477319263758f, 8.362461382997056f), glm::vec2(-3.3641547717550351f, 9.2637133671992373f), glm::vec2(-3.2145887950718892f, 10.992031319982299f), glm::vec2(-3.2644441206329349f, 15.163260225256806f), glm::vec2(-3.2478256787792512f, 15.495629062330474f), glm::vec2(-3.2312072369255675f, 15.827997899404142f), glm::vec2(-3.3973916554624028f, 15.844616341257826f), glm::vec2(-3.4306285391697697f, 16.127129852770441f), glm::vec2(-3.4638654228771366f, 16.409643364283056f), glm::vec2(-3.3973916554624024f, 16.991288829161967f), glm::vec2(-3.8460895855118515f, 17.423368317357735f), glm::vec2(-4.2947875155613007f, 17.855447805553503f), glm::vec2(-5.092472724538097f, 17.971776898529285f), glm::vec2(-5.1090911663917806f, 18.270908851895584f), glm::vec2(-5.1257096082454643f, 18.570040805261883f), glm::vec2(-4.7601038874644335f, 18.520185479700839f), glm::vec2(-4.7434854456107498f, 18.885791200481869f), glm::vec2(-4.7268670037570661f, 19.251396921262899f), glm::vec2(-4.7268670037570661f, 21.478268129656456f), glm::vec2(-4.7268670037570661f, 21.794018524876442f), glm::vec2(-4.7268670037570661f, 22.109768920096428f), glm::vec2(-4.7933407711718008f, 22.22609801307221f), glm::vec2(-4.3446428411223517f, 22.22609801307221f), glm::vec2(-3.8959449110729025f, 22.22609801307221f), glm::vec2(-3.7690418517003104f, 22.282893385803408f), glm::vec2(-3.7815248758487927f, 21.758606371567147f), glm::vec2(-3.7940078999972751f, 21.234319357330886f), glm::vec2(-3.8064909241457583f, 20.647617222352206f), glm::vec2(-3.7940078999972755f, 20.335541618640146f), glm::vec2(-3.7815248758487927f, 20.023466014928086f), glm::vec2(-3, 20), glm::vec2(0, 20), glm::vec2(0, 20), glm::vec2(0, 20) },
          // small curve
          std::vector<glm::vec2> { glm::vec2(0, 0), glm::vec2(0, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-6, 0), glm::vec2(-6.1892898868811956f, -0.025995629009733179f), glm::vec2(-6.1892898868811956f, 0.22328099879551819f), glm::vec2(-6.1892898868811956f, 0.47255762660076955f), glm::vec2(-6.4053296309790788f, 0.50579451030813338f), glm::vec2(-6.4053296309790788f, 1.0043477659186344f), glm::vec2(-6.4053296309790788f, 1.5029010215291354f), glm::vec2(-6.0064870264906789f, 1.7854145330417523f), glm::vec2(-5.9898685846369961f, 1.984835835285951f), glm::vec2(-5.9732501427833133f, 2.1842571375301496f), glm::vec2(-6.4053296309790797f, 2.4169153234817156f), glm::vec2(-6.4385665146864461f, 2.9819423465069477f), glm::vec2(-6.4718033983938126f, 3.5469693695321798f), glm::vec2(-5.6408813057096472f, 4.3446545785089778f), glm::vec2(-5.2420387012212482f, 5.0758660200710439f), glm::vec2(-5.0511773238564297f, 5.4257785452398783f), glm::vec2(-4.3960827447022988f, 6.7010359049466022f), glm::vec2(-4.1841962013526057f, 6.7013443660194518f), glm::vec2(-3.9533038966585545f, 6.7016804953785529f), glm::vec2(-3.4421477319263758f, 8.362461382997056f), glm::vec2(-3.3641547717550351f, 9.2637133671992373f), glm::vec2(-3.2145887950718892f, 10.992031319982299f), glm::vec2(-3.2644441206329349f, 15.163260225256806f), glm::vec2(-3.2478256787792512f, 15.495629062330474f), glm::vec2(-3.2312072369255675f, 15.827997899404142f), glm::vec2(-3.3973916554624028f, 15.844616341257826f), glm::vec2(-3.4306285391697697f, 16.127129852770441f), glm::vec2(-3.4638654228771366f, 16.409643364283056f), glm::vec2(-3.3973916554624024f, 16.991288829161967f), glm::vec2(-3.8460895855118515f, 17.423368317357735f), glm::vec2(-4.2947875155613007f, 17.855447805553503f), glm::vec2(-5.092472724538097f, 17.971776898529285f), glm::vec2(-5.1090911663917806f, 18.270908851895584f), glm::vec2(-5.1257096082454643f, 18.570040805261883f), glm::vec2(-4.7601038874644335f, 18.520185479700839f), glm::vec2(-4.7434854456107498f, 18.885791200481869f), glm::vec2(-4.7268670037570661f, 19.251396921262899f), glm::vec2(-4.7268670037570661f, 19.902139783389586f), glm::vec2(-4.7268670037570661f, 20.217890178609572f), glm::vec2(-4.7268670037570661f, 20.533640573829558f), glm::vec2(-4.7120795152297728f, 20.60356045507385f), glm::vec2(-4.5741048912662485f, 20.60356045507385f), glm::vec2(-4.436130267302719f, 20.60356045507385f), glm::vec2(-4.1084985688725872f, 20.605702377004032f), glm::vec2(-4.0121010433671573f, 20.595996837342554f), glm::vec2(-3.9157035178616768f, 20.586291297681012f), glm::vec2(-3.8064909241457583f, 20.647617222352206f), glm::vec2(-3.7940078999972755f, 20.335541618640146f), glm::vec2(-3.7815248758487927f, 20.023466014928086f), glm::vec2(-3, 20), glm::vec2(0, 20), glm::vec2(0, 20), glm::vec2(0, 20) }
      };
    case objects::white_bishop:
    case objects::black_bishop:
      return std::vector<std::vector<glm::vec2>> {
        std::vector<glm::vec2> { glm::vec2(0, 0), glm::vec2(0, 0), glm::vec2(-2, 0), glm::vec2(-4, 0), glm::vec2(-6, 0), glm::vec2(-5.9516004723214913f, 0.033525533234910032f), glm::vec2(-5.9366793201264167f, 0.28718512055121881f), glm::vec2(-5.9217581679313422f, 0.54084470786752759f), glm::vec2(-6.1008119942722647f, 0.49608125128229696f), glm::vec2(-6.1008119942722647f, 1.0183215781099912f), glm::vec2(-6.1008119942722647f, 1.5405619049376855f), glm::vec2(-5.742704341590418f, 1.7345368834736856f), glm::vec2(-5.7128620372002636f, 1.9285118620096873f), glm::vec2(-5.6830197328101093f, 2.1224868405456889f), glm::vec2(-6.0560485376870332f, 2.0926445361555333f), glm::vec2(-6.0709696898821104f, 2.9580713634699998f), glm::vec2(-6.0858908420771876f, 3.8234981907844663f), glm::vec2(-5.2801486235430275f, 4.2412904522466235f), glm::vec2(-4.9518832752513351f, 4.8679788444398557f), glm::vec2(-4.6236179269596427f, 5.494667236633088f), glm::vec2(-4.116298752327026f, 6.5839113468737072f), glm::vec2(-3.8924814694008711f, 6.5689901946786309f), glm::vec2(-3.6686641864747163f, 6.5540690424835546f), glm::vec2(-3.2061084684273284f, 7.8969727400404857f), glm::vec2(-3.0718180986716366f, 8.4192130668681795f), glm::vec2(-2.9375277289159447f, 8.9414533936958733f), glm::vec2(-2.4600508586734797f, 11.07517815759188f), glm::vec2(-2.4898931630636341f, 12.343476094173425f), glm::vec2(-2.5197354674537884f, 13.611774030754971f), glm::vec2(-2.4749720108685569f, 14.417516249289131f), glm::vec2(-2.4898931630636341f, 14.775623901970977f), glm::vec2(-2.5048143152587112f, 15.133731554652824f), glm::vec2(-2.6241835328193259f, 15.536602663919897f), glm::vec2(-2.6689469894045574f, 15.849946860016518f), glm::vec2(-2.7137104459897889f, 16.163291056113138f), glm::vec2(-2.9524488811110201f, 16.56616216538022f), glm::vec2(-3.2359507728174837f, 16.86458520928176f), glm::vec2(-3.5194526645239472f, 17.1630082531833f), glm::vec2(-4.2207468176925644f, 17.386825536109459f), glm::vec2(-4.2207468176925644f, 17.625563971230687f), glm::vec2(-4.2207468176925644f, 17.864302406351914f), glm::vec2(-3.7581910996451793f, 17.909065862937151f), glm::vec2(-3.5194526645239472f, 18.058277384887919f), glm::vec2(-3.2807142294027152f, 18.207488906838687f), glm::vec2(-3.191187316232257f, 18.565596559520536f), glm::vec2(-2.9673700333060995f, 18.565596559520536f), glm::vec2(-2.743552750379942f, 18.565596559520536f), glm::vec2(-2.7137104459897881f, 18.714808081471315f), glm::vec2(-2.6987892937947109f, 19.028152277567933f), glm::vec2(-2.6838681415996337f, 19.341496473664552f), glm::vec2(-3.1016604030617954f, 20.72916362780671f), glm::vec2(-3.2956353815977932f, 21.340930867804868f), glm::vec2(-3.4896103601337911f, 21.952698107803027f), glm::vec2(-3.564216121109177f, 22.385411521460256f), glm::vec2(-3.564216121109177f, 23.056863370238723f), glm::vec2(-3.564216121109177f, 23.72831521901719f), glm::vec2(-3.2508719250125662f, 24.907086242428267f), glm::vec2(-2.6241835328193299f, 25.653143852182119f), glm::vec2(-1.9974951406260937f, 26.39920146193597f), glm::vec2(-1.8184413142851779f, 26.548412983886735f), glm::vec2(-1.4155702050180938f, 26.77223026681289f), glm::vec2(-1.0126990957510098f, 26.996047549739046f), glm::vec2(-0.7590395084347028f, 27.085574462909513f), glm::vec2(-0.77396066062977997f, 27.309391745835665f), glm::vec2(-0.78888181282485714f, 27.533209028761817f), glm::vec2(-1.1768317698968587f, 27.682420550712585f), glm::vec2(-1.1469894655067043f, 28.055449355589513f), glm::vec2(-1.11714716111655f, 28.42847816046644f), glm::vec2(-0.89332987819040355f, 28.488162769246749f), glm::vec2(-0.56506452989870493f, 28.577689682417208f), glm::vec2(-0.2367991816070063f, 28.667216595587668f), glm::vec2(-0.16219342063162578f, 28.622453139002438f), glm::vec2(-0.11742996404639428f, 28.786585813148285f), glm::vec2(-0.072666507461162766f, 28.950718487294132f), glm::vec2(0, 29), glm::vec2(0, 29) }
      };
    case objects::white_queen:
    case objects::black_queen:
      return std::vector<std::vector<glm::vec2>> {
        // large curve
        std::vector<glm::vec2> { glm::vec2(0, 0), glm::vec2(0, 0), glm::vec2(-3, 0), glm::vec2(-5, 0), glm::vec2(-6, 0), glm::vec2(-6.6257339033713309f, 0.034296280708641436f), glm::vec2(-6.6257339033713309f, 0.21523456255215062f), glm::vec2(-6.6257339033713309f, 0.39617284439565981f), glm::vec2(-6.7370805383519503f, 0.28482620941503667f), glm::vec2(-6.7231622089793728f, 0.95290601929876728f), glm::vec2(-6.7092438796067952f, 1.6209858291824979f), glm::vec2(-6.3195306571746208f, 1.634904158555075f), glm::vec2(-6.3334489865471983f, 1.9550257341243618f), glm::vec2(-6.3473673159197759f, 2.2751473096936485f), glm::vec2(-6.7649171970971071f, 2.2890656390662252f), glm::vec2(-6.7788355264696847f, 3.0824104133031538f), glm::vec2(-6.7927538558422622f, 3.8757551875400824f), glm::vec2(-6.0411640697230684f, 4.181958433736793f), glm::vec2(-5.5401042123102711f, 5.0727315135817639f), glm::vec2(-5.0390443548974737f, 5.9635045934267348f), glm::vec2(-4.3024115348414682f, 7.4174089342509486f), glm::vec2(-4.0993598929213535f, 7.4061282874776087f), glm::vec2(-3.8963082510012388f, 7.3948476407042687f), glm::vec2(-3.3731535316030952f, 9.0404553231739211f), glm::vec2(-3.2208597514940305f, 10.271496712388846f), glm::vec2(-3.0685659713849658f, 11.50253810160377f), glm::vec2(-2.7639784111668404f, 14.269208440251749f), glm::vec2(-2.7893607078516842f, 15.715999351287845f), glm::vec2(-2.814743004536528f, 17.162790262323941f), glm::vec2(-2.763978411166844f, 18.254229019772229f), glm::vec2(-2.9162721912759046f, 18.33037590982676f), glm::vec2(-3.0685659713849653f, 18.406522799881291f), glm::vec2(-3.0304925263576994f, 18.77456610181153f), glm::vec2(-3.0178013780152773f, 19.11722710705692f), glm::vec2(-3.0051102296728551f, 19.459888112302309f), glm::vec2(-3.2081686031516075f, 19.929460600971925f), glm::vec2(-3.5127561633697333f, 20.145210122793095f), glm::vec2(-3.8173437235878591f, 20.360959644614265f), glm::vec2(-4.566121475790748f, 20.576709166435446f), glm::vec2(-4.566121475790748f, 20.817840984941462f), glm::vec2(-4.566121475790748f, 21.058972803447478f), glm::vec2(-4.1219312838059841f, 21.249340028583802f), glm::vec2(-3.7919614269030144f, 21.236648880241383f), glm::vec2(-3.4619915700000448f, 21.223957731898963f), glm::vec2(-3.4493004216576182f, 21.477780698747399f), glm::vec2(-3.2462420481788694f, 21.490471847089822f), glm::vec2(-3.0431836747001206f, 21.503162995432245f), glm::vec2(-3.1447128614394977f, 21.858515149020057f), glm::vec2(-3.081257119727387f, 21.858515149020057f), glm::vec2(-3.0178013780152764f, 21.858515149020057f), glm::vec2(-2.9924190813304277f, 22.048882374156388f), glm::vec2(-2.8655075979062117f, 22.036191225813965f), glm::vec2(-2.7385961144819957f, 22.023500077471542f), glm::vec2(-2.7385961144819957f, 22.531146011168421f), glm::vec2(-2.7512872628244178f, 22.975336203153187f), glm::vec2(-2.76397841116684f, 23.419526395137954f), glm::vec2(-2.9035810429334816f, 24.6632589326953f), glm::vec2(-3.1574040097819189f, 25.234360608104286f), glm::vec2(-3.2906943511829909f, 25.534263876256698f), glm::vec2(-3.658467633037465f, 26.222638881578185f), glm::vec2(-3.9832122431902874f, 26.84370496304587f), glm::vec2(-4.276874334907955f, 27.405326492323496f), glm::vec2(-4.53535043363122f, 27.911907249262114f), glm::vec2(-4.553430327448325f, 28.026413243437112f), glm::vec2(-4.5915037724755914f, 28.267545061943132f), glm::vec2(-4.4011365473392656f, 28.622897215530948f), glm::vec2(-4.2234604705453567f, 28.64827951221579f), glm::vec2(-4.0457843937514477f, 28.673661808900633f), glm::vec2(-3.6269764984515236f, 28.191398171888601f), glm::vec2(-3.3985358282879305f, 28.11525128183407f), glm::vec2(-3.2700828901695447f, 28.072433635794606f), glm::vec2(-2.8406736669278003f, 28.009552237413587f), glm::vec2(-2.432970891834584f, 27.98527303819499f), glm::vec2(-2.1156151627461828f, 27.966374116136052f), glm::vec2(-1.8114115037813387f, 27.970864503412006f), glm::vec2(-1.6725396537185508f, 28.026413243437119f), glm::vec2(-1.3552609451580038f, 28.153324726861335f), glm::vec2(-0.75877697306417069f, 28.699044105585479f), glm::vec2(-0.80954156643385922f, 29.09246970420056f), glm::vec2(-0.86030615980354774f, 29.485895302815642f), glm::vec2(-1.4060255385276932f, 29.574733341212593f), glm::vec2(-1.3933343901852702f, 29.930085494800405f), glm::vec2(-1.3806432418428471f, 30.285437648388218f), glm::vec2(-1, 31), glm::vec2(0, 31), glm::vec2(0, 31), glm::vec2(0, 31) },
          // small curve
          std::vector<glm::vec2> { glm::vec2(0, 0), glm::vec2(0, 0), glm::vec2(-3, 0), glm::vec2(-5, 0), glm::vec2(-6, 0), glm::vec2(-6.6257339033713309f, 0.034296280708641436f), glm::vec2(-6.6257339033713309f, 0.21523456255215062f), glm::vec2(-6.6257339033713309f, 0.39617284439565981f), glm::vec2(-6.7370805383519503f, 0.28482620941503667f), glm::vec2(-6.7231622089793728f, 0.95290601929876728f), glm::vec2(-6.7092438796067952f, 1.6209858291824979f), glm::vec2(-6.3195306571746208f, 1.634904158555075f), glm::vec2(-6.3334489865471983f, 1.9550257341243618f), glm::vec2(-6.3473673159197759f, 2.2751473096936485f), glm::vec2(-6.7649171970971071f, 2.2890656390662252f), glm::vec2(-6.7788355264696847f, 3.0824104133031538f), glm::vec2(-6.7927538558422622f, 3.8757551875400824f), glm::vec2(-6.0411640697230684f, 4.181958433736793f), glm::vec2(-5.5401042123102711f, 5.0727315135817639f), glm::vec2(-5.0390443548974737f, 5.9635045934267348f), glm::vec2(-4.3024115348414682f, 7.4174089342509486f), glm::vec2(-4.0993598929213535f, 7.4061282874776087f), glm::vec2(-3.8963082510012388f, 7.3948476407042687f), glm::vec2(-3.3731535316030952f, 9.0404553231739211f), glm::vec2(-3.2208597514940305f, 10.271496712388846f), glm::vec2(-3.0685659713849658f, 11.50253810160377f), glm::vec2(-2.7639784111668404f, 14.269208440251749f), glm::vec2(-2.7893607078516842f, 15.715999351287845f), glm::vec2(-2.814743004536528f, 17.162790262323941f), glm::vec2(-2.763978411166844f, 18.254229019772229f), glm::vec2(-2.9162721912759046f, 18.33037590982676f), glm::vec2(-3.0685659713849653f, 18.406522799881291f), glm::vec2(-3.0304925263576994f, 18.77456610181153f), glm::vec2(-3.0178013780152773f, 19.11722710705692f), glm::vec2(-3.0051102296728551f, 19.459888112302309f), glm::vec2(-3.2081686031516075f, 19.929460600971925f), glm::vec2(-3.5127561633697333f, 20.145210122793095f), glm::vec2(-3.8173437235878591f, 20.360959644614265f), glm::vec2(-4.566121475790748f, 20.576709166435446f), glm::vec2(-4.566121475790748f, 20.817840984941462f), glm::vec2(-4.566121475790748f, 21.058972803447478f), glm::vec2(-4.1219312838059841f, 21.249340028583802f), glm::vec2(-3.7919614269030144f, 21.236648880241383f), glm::vec2(-3.4619915700000448f, 21.223957731898963f), glm::vec2(-3.4493004216576182f, 21.477780698747399f), glm::vec2(-3.2462420481788694f, 21.490471847089822f), glm::vec2(-3.0431836747001206f, 21.503162995432245f), glm::vec2(-3.1447128614394977f, 21.858515149020057f), glm::vec2(-3.081257119727387f, 21.858515149020057f), glm::vec2(-3.0178013780152764f, 21.858515149020057f), glm::vec2(-2.9924190813304277f, 22.048882374156388f), glm::vec2(-2.8655075979062117f, 22.036191225813965f), glm::vec2(-2.7385961144819957f, 22.023500077471542f), glm::vec2(-2.7385961144819957f, 22.531146011168421f), glm::vec2(-2.7512872628244178f, 22.975336203153187f), glm::vec2(-2.76397841116684f, 23.419526395137954f), glm::vec2(-2.9035810429334816f, 24.6632589326953f), glm::vec2(-3.1574040097819189f, 25.234360608104286f), glm::vec2(-3.2906943511829909f, 25.534263876256698f), glm::vec2(-3.658467633037465f, 26.222638881578185f), glm::vec2(-3.9832122431902874f, 26.84370496304587f), glm::vec2(-4.276874334907955f, 27.405326492323496f), glm::vec2(-4.1612598246633272f, 27.421153681983093f), glm::vec2(-4.1301807318479087f, 27.44400780816877f), glm::vec2(-4.0647329950539124f, 27.492135044190118f), glm::vec2(-3.8073141599405873f, 27.724941090837454f), glm::vec2(-3.7389970904572767f, 27.754558258695905f), glm::vec2(-3.6706800209739634f, 27.784175426554381f), glm::vec2(-3.4976271964682186f, 27.893517181094957f), glm::vec2(-3.3985358282879305f, 27.936856824184307f), glm::vec2(-3.3428164269404332f, 27.961226847647445f), glm::vec2(-2.8406736669278003f, 28.009552237413587f), glm::vec2(-2.432970891834584f, 27.98527303819499f), glm::vec2(-2.1156151627461828f, 27.966374116136052f), glm::vec2(-1.8114115037813387f, 27.970864503412006f), glm::vec2(-1.6725396537185508f, 28.026413243437119f), glm::vec2(-1.3552609451580038f, 28.153324726861335f), glm::vec2(-0.75877697306417069f, 28.699044105585479f), glm::vec2(-0.80954156643385922f, 29.09246970420056f), glm::vec2(-0.86030615980354774f, 29.485895302815642f), glm::vec2(-1.4060255385276932f, 29.574733341212593f), glm::vec2(-1.3933343901852702f, 29.930085494800405f), glm::vec2(-1.3806432418428471f, 30.285437648388218f), glm::vec2(-1, 31), glm::vec2(0, 31), glm::vec2(0, 31), glm::vec2(0, 31) }
      };
    case objects::white_king:
    case objects::black_king:
      return std::vector<std::vector<glm::vec2>> {
        // large curve
        std::vector<glm::vec2> { glm::vec2(0, 0), glm::vec2(0, 0), glm::vec2(-3, 0), glm::vec2(-5, 0), glm::vec2(-6, 0), glm::vec2(-6.8411260963695977f, -0.010074137591601806f), glm::vec2(-6.8536845946697662f, 0.29760907076251564f), glm::vec2(-6.8662430929699347f, 0.60529227911663308f), glm::vec2(-6.9604318302211947f, 0.29760907076251542f), glm::vec2(-6.9541525810711109f, 1.0511189687725992f), glm::vec2(-6.9478733319210271f, 1.8046288667826831f), glm::vec2(-6.458091898214473f, 1.6727646346309188f), glm::vec2(-6.458091898214473f, 1.9239346006342799f), glm::vec2(-6.458091898214473f, 2.175104566637641f), glm::vec2(-6.95415258107111f, 2.1939423140878938f), glm::vec2(-6.9604318302211947f, 3.0793164442497414f), glm::vec2(-6.9667110793712794f, 3.964690574411589f), glm::vec2(-5.9871482119581687f, 4.4544720081181444f), glm::vec2(-5.5727177680526232f, 5.1451894146273878f), glm::vec2(-5.1582873241470777f, 5.8359068211366312f), glm::vec2(-4.4612906684877496f, 7.4057191086576371f), glm::vec2(-4.1724452075838849f, 7.4182776069578065f), glm::vec2(-3.8835997466800203f, 7.4308361052579759f), glm::vec2(-3.3059088248722888f, 9.3836825909341037f), glm::vec2(-3.1866030910206931f, 10.495109690498978f), glm::vec2(-3.0672973571690973f, 11.606536790063853f), glm::vec2(-2.7282179030645608f, 15.581301502067046f), glm::vec2(-2.7344971522146446f, 16.8183135846336f), glm::vec2(-2.7407764013647284f, 18.055325667200155f), glm::vec2(-2.7093801556143067f, 19.606300207270902f), glm::vec2(-2.8412443877660718f, 19.625137954721154f), glm::vec2(-2.9731086199178369f, 19.643975702171407f), glm::vec2(-3.0233426131185093f, 19.989334405426028f), glm::vec2(-3.0107841148183407f, 20.253062869729558f), glm::vec2(-2.9982256165181722f, 20.516791334033087f), glm::vec2(-3.0798558554692645f, 21.088203006690733f), glm::vec2(-3.4691693027744748f, 21.370769218444515f), glm::vec2(-3.858482750079685f, 21.653335430198297f), glm::vec2(-4.6999021361909437f, 21.829154406400647f), glm::vec2(-4.7061813853410284f, 22.155675362205017f), glm::vec2(-4.7124606344911131f, 22.482196318009386f), glm::vec2(-4.0656979720324582f, 22.614060550161149f), glm::vec2(-3.7956902585788446f, 22.607781301011066f), glm::vec2(-3.5256825451252309f, 22.601502051860983f), glm::vec2(-3.4063768112736352f, 22.783600277213413f), glm::vec2(-3.2807918282719544f, 22.821275772113921f), glm::vec2(-3.1552068452702735f, 22.858951267014429f), glm::vec2(-3.0798558554692645f, 23.311057205820479f), glm::vec2(-2.9668293707677527f, 23.292219458370226f), glm::vec2(-2.8538028860662408f, 23.273381710919974f), glm::vec2(-2.7282179030645581f, 23.662695158225176f), glm::vec2(-2.8035688928655667f, 24.058287854680472f), glm::vec2(-2.8789198826665752f, 24.453880551135768f), glm::vec2(-3.0547388588689275f, 25.414605671098627f), glm::vec2(-3.513124046825062f, 25.872990859054759f), glm::vec2(-3.9715092347811964f, 26.331376047010892f), glm::vec2(-4.7564153785416998f, 27.449082395725846f), glm::vec2(-4.7752531259919522f, 28.089565809034415f), glm::vec2(-4.7940908734422045f, 28.730049222342984f), glm::vec2(-4.3922189278368267f, 29.433325127152415f), glm::vec2(-3.9715092347811964f, 29.734729086356449f), glm::vec2(-3.5507995417255662f, 30.036133045560483f), glm::vec2(-2.8789198826665752f, 30.287303011563832f), glm::vec2(-2.3389044557593488f, 30.281023762413749f), glm::vec2(-1.7988890288521224f, 30.274744513263666f), glm::vec2(-0.87583940378977043f, 30.249627516663331f), glm::vec2(-0.87583940378977043f, 30.475680486066356f), glm::vec2(-0.87583940378977043f, 30.70173345546938f), glm::vec2(-1.0139828850916195f, 30.739408950369885f), glm::vec2(-1.4346925781472493f, 30.739408950369885f), glm::vec2(-1.855402271202879f, 30.739408950369885f), glm::vec2(-2.1630854795569956f, 30.739408950369889f), glm::vec2(-2.1756439778571641f, 31.216631885776273f), glm::vec2(-2.1882024761573327f, 31.693854821182658f), glm::vec2(-2.1693647287070799f, 32.051772022737445f), glm::vec2(-2.1756439778571641f, 32.378292978541815f), glm::vec2(-2.1819232270072484f, 32.704813934346184f), glm::vec2(-1.9370325101539714f, 32.912029156298956f), glm::vec2(-1.3405038408959888f, 32.905749907148873f), glm::vec2(-0.74397517163800631f, 32.899470657998791f), glm::vec2(-0.39233721923330073f, 32.943425402049378f), glm::vec2(-0.39861646838338483f, 33.106685879951563f), glm::vec2(-0.40489571753346892f, 33.269946357853748f), glm::vec2(-0.91351489869027502f, 33.163199122302323f), glm::vec2(-0.91351489869027502f, 33.464603081506354f), glm::vec2(-0.91351489869027502f, 33.766007040710385f), glm::vec2(-1, 34), glm::vec2(0, 34), glm::vec2(0, 34), glm::vec2(0, 34) },
          // small curve
          std::vector<glm::vec2> { glm::vec2(0, 0), glm::vec2(0, 0), glm::vec2(-3, 0), glm::vec2(-5, 0), glm::vec2(-6, 0), glm::vec2(-6.8411260963695977f, -0.010074137591601806f), glm::vec2(-6.8536845946697662f, 0.29760907076251564f), glm::vec2(-6.8662430929699347f, 0.60529227911663308f), glm::vec2(-6.9604318302211947f, 0.29760907076251542f), glm::vec2(-6.9541525810711109f, 1.0511189687725992f), glm::vec2(-6.9478733319210271f, 1.8046288667826831f), glm::vec2(-6.458091898214473f, 1.6727646346309188f), glm::vec2(-6.458091898214473f, 1.9239346006342799f), glm::vec2(-6.458091898214473f, 2.175104566637641f), glm::vec2(-6.95415258107111f, 2.1939423140878938f), glm::vec2(-6.9604318302211947f, 3.0793164442497414f), glm::vec2(-6.9667110793712794f, 3.964690574411589f), glm::vec2(-5.9871482119581687f, 4.4544720081181444f), glm::vec2(-5.5727177680526232f, 5.1451894146273878f), glm::vec2(-5.1582873241470777f, 5.8359068211366312f), glm::vec2(-4.4612906684877496f, 7.4057191086576371f), glm::vec2(-4.1724452075838849f, 7.4182776069578065f), glm::vec2(-3.8835997466800203f, 7.4308361052579759f), glm::vec2(-3.3059088248722888f, 9.3836825909341037f), glm::vec2(-3.1866030910206931f, 10.495109690498978f), glm::vec2(-3.0672973571690973f, 11.606536790063853f), glm::vec2(-2.7282179030645608f, 15.581301502067046f), glm::vec2(-2.7344971522146446f, 16.8183135846336f), glm::vec2(-2.7407764013647284f, 18.055325667200155f), glm::vec2(-2.7093801556143067f, 19.606300207270902f), glm::vec2(-2.8412443877660718f, 19.625137954721154f), glm::vec2(-2.9731086199178369f, 19.643975702171407f), glm::vec2(-3.0233426131185093f, 19.989334405426028f), glm::vec2(-3.0107841148183407f, 20.253062869729558f), glm::vec2(-2.9982256165181722f, 20.516791334033087f), glm::vec2(-3.0798558554692645f, 21.088203006690733f), glm::vec2(-3.4691693027744748f, 21.370769218444515f), glm::vec2(-3.858482750079685f, 21.653335430198297f), glm::vec2(-4.6999021361909437f, 21.829154406400647f), glm::vec2(-4.7061813853410284f, 22.155675362205017f), glm::vec2(-4.7124606344911131f, 22.482196318009386f), glm::vec2(-4.0656979720324582f, 22.614060550161149f), glm::vec2(-3.7956902585788446f, 22.607781301011066f), glm::vec2(-3.5256825451252309f, 22.601502051860983f), glm::vec2(-3.4063768112736352f, 22.783600277213413f), glm::vec2(-3.2807918282719544f, 22.821275772113921f), glm::vec2(-3.1552068452702735f, 22.858951267014429f), glm::vec2(-3.0798558554692645f, 23.311057205820479f), glm::vec2(-2.9668293707677527f, 23.292219458370226f), glm::vec2(-2.8538028860662408f, 23.273381710919974f), glm::vec2(-2.7282179030645581f, 23.662695158225176f), glm::vec2(-2.8035688928655667f, 24.058287854680472f), glm::vec2(-2.8789198826665752f, 24.453880551135768f), glm::vec2(-3.0547388588689275f, 25.414605671098627f), glm::vec2(-3.513124046825062f, 25.872990859054759f), glm::vec2(-3.9715092347811964f, 26.331376047010892f), glm::vec2(-4.1346327645417151f, 26.917246400847617f), glm::vec2(-3.950179849308538f, 27.530883904194972f), glm::vec2(-3.7657269340753663f, 28.144521407542339f), glm::vec2(-3.6081204880122804f, 28.635929725034721f), glm::vec2(-3.4868249332317474f, 29.139048379872008f), glm::vec2(-3.3655293784512361f, 29.642167034709317f), glm::vec2(-2.8789198826665752f, 30.287303011563832f), glm::vec2(-2.3389044557593488f, 30.281023762413749f), glm::vec2(-1.7988890288521224f, 30.274744513263666f), glm::vec2(-0.87583940378977043f, 30.249627516663331f), glm::vec2(-0.87583940378977043f, 30.475680486066356f), glm::vec2(-0.87583940378977043f, 30.70173345546938f), glm::vec2(-1.0139828850916195f, 30.739408950369885f), glm::vec2(-1.4346925781472493f, 30.739408950369885f), glm::vec2(-1.855402271202879f, 30.739408950369885f), glm::vec2(-2.1630854795569956f, 30.739408950369889f), glm::vec2(-2.1756439778571641f, 31.216631885776273f), glm::vec2(-2.1882024761573327f, 31.693854821182658f), glm::vec2(-2.1693647287070799f, 32.051772022737445f), glm::vec2(-2.1756439778571641f, 32.378292978541815f), glm::vec2(-2.1819232270072484f, 32.704813934346184f), glm::vec2(-1.9370325101539714f, 32.912029156298956f), glm::vec2(-1.3405038408959888f, 32.905749907148873f), glm::vec2(-0.74397517163800631f, 32.899470657998791f), glm::vec2(-0.39233721923330073f, 32.943425402049378f), glm::vec2(-0.39861646838338483f, 33.106685879951563f), glm::vec2(-0.40489571753346892f, 33.269946357853748f), glm::vec2(-0.91351489869027502f, 33.163199122302323f), glm::vec2(-0.91351489869027502f, 33.464603081506354f), glm::vec2(-0.91351489869027502f, 33.766007040710385f), glm::vec2(-1, 34), glm::vec2(0, 34), glm::vec2(0, 34), glm::vec2(0, 34) },
      };
    case objects::white_knight:
    case objects::black_knight:
      return std::vector<std::vector<glm::vec2>> {
        // base curve
        std::vector<glm::vec2> { glm::vec2(0, 0), glm::vec2(0, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-6, 0), glm::vec2(-6.1892898868811956f, -0.025995629009733179f), glm::vec2(-6.1892898868811956f, 0.22328099879551819f), glm::vec2(-6.1892898868811956f, 0.47255762660076955f), glm::vec2(-6.0022087320039805f, 1.0127005752022775f), glm::vec2(-6.0244371907738508f, 1.6462116501435666f), glm::vec2(-5.5909822447613902f, 1.5350693562942173f), glm::vec2(-5.5687537859915199f, 1.9018389259970698f), glm::vec2(-5.5465253272216497f, 2.2686084956999224f), glm::vec2(-6.0133229613889156f, 2.2463800369300539f), glm::vec2(-6.0133229613889156f, 2.9688049469508222f), glm::vec2(-6.0133229613889156f, 3.6912298569715905f), glm::vec2(-5.3909261158325634f, 3.9913140503648368f), glm::vec2(-5.0019280873598406f, 4.7026247310006717f), glm::vec2(-4.6129300588871178f, 5.4139354116365066f), glm::vec2(-4.3350743242637479f, 5.7807049813393601f), glm::vec2(-4.2572747185692021f, 6.0252180278079273f), glm::vec2(-4.1794751128746563f, 6.2697310742764945f), glm::vec2(-3.9460762957910243f, 6.2697310742764945f), glm::vec2(-3.9349620664060891f, 6.469787203205323f), glm::vec2(-3.923847837021154f, 6.6698433321341515f), glm::vec2(-4.0498043095388159f, 7), glm::vec2(-3.4280153587758826f, 7), glm::vec2(-2.8062264080129493f, 7), glm::vec2(0, 7), glm::vec2(0, 7), glm::vec2(0, 7), glm::vec2(0, 7) },
          // profile curve
          std::vector<glm::vec2> { glm::vec2(0, 7), glm::vec2(0, 7), glm::vec2(-0.6768733558594433f, 6.988991421517194f), glm::vec2(-2, 7), glm::vec2(-3.3231266441405567f, 7.011008578482806f), glm::vec2(-3.3796311076195091f, 6.897999651524902f), glm::vec2(-3.3683302149237186f, 7.971584457624985f), glm::vec2(-3.3570293222279282f, 9.045169263725068f), glm::vec2(-3.4926400345774118f, 13.576827234736996f), glm::vec2(-3.210117717182654f, 15.452775422238188f), glm::vec2(-2.9275953997878963f, 17.328723609739381f), glm::vec2(-2.7693829020468317f, 19.57760125620165f), glm::vec2(-1.8088070229046531f, 20.764194989259636f), glm::vec2(-0.84823114376247455f, 21.950788722317622f), glm::vec2(-0.068469547752941562f, 22.33501907397449f), glm::vec2(0.25925634042497814f, 22.696647640239782f), glm::vec2(0.58698222860289784f, 23.058276206505074f), glm::vec2(1.1068232926092498f, 23.871940480601978f), glm::vec2(1.2424340049587355f, 24.256170832258849f), glm::vec2(1.3780447173082211f, 24.640401183915721f), glm::vec2(1.1520268633924138f, 25.069835106355747f), glm::vec2(1.7396732835735105f, 24.459586900783073f), glm::vec2(2.3273197037546072f, 23.849338695210399f), glm::vec2(2.2143107767967045f, 24.14316190530095f), glm::vec2(2.2143107767967045f, 23.476409236249317f), glm::vec2(2.2143107767967045f, 22.809656567197685f), glm::vec2(1.9656911374893142f, 22.109001220058683f), glm::vec2(2.7567536261946395f, 21.317938731353362f), glm::vec2(3.5478161148999647f, 20.52687624264804f), glm::vec2(4.3953830670842429f, 19.532397685418491f), glm::vec2(4.813516096828482f, 18.662228947842635f), glm::vec2(5.2316491265727212f, 17.792060210266779f), glm::vec2(5.4915696585759024f, 17.227015575477267f), glm::vec2(5.4915696585759024f, 16.673271833383538f), glm::vec2(5.4915696585759024f, 16.119528091289808f), glm::vec2(5.3107553754432546f, 15.791802203111892f), glm::vec2(5.0169321653527064f, 15.565784349196084f), glm::vec2(4.7231089552621581f, 15.339766495280276f), glm::vec2(4.3953830670842393f, 15.35106738797607f), glm::vec2(4.1806661058642236f, 15.531881671108714f), glm::vec2(3.9659491446442079f, 15.712695954241358f), glm::vec2(3.220090226722045f, 16.108227198594015f), glm::vec2(2.2821161329714474f, 16.232537018247712f), glm::vec2(1.3441420392208498f, 16.356846837901408f), glm::vec2(1.3780447173082195f, 16.424652194076145f), glm::vec2(1.9091866740103658f, 15.554483456500293f), glm::vec2(2.440328630712512f, 14.684314718924441f), glm::vec2(2.8810634458483309f, 13.633331698215937f), glm::vec2(3.1070812997641402f, 12.638853140986388f), glm::vec2(3.3330991536799495f, 11.644374583756839f), glm::vec2(3.6834268272494475f, 8.9886648002461165f), glm::vec2(3.6834268272494475f, 7.9602835649291972f), glm::vec2(3.6834268272494475f, 6.9319023296122779f), glm::vec2(3.6642764506290266f, 7), glm::vec2(2, 7), glm::vec2(0.33572354937097337f, 7), glm::vec2(0, 7), glm::vec2(0, 7), glm::vec2(0, 7), glm::vec2(0, 7) },
          // profile face curve
          std::vector<glm::vec2> { glm::vec2(-1.3737084377126259f, 15.494495502634825f), glm::vec2(-1.3737084377126259f, 15.494495502634825f), glm::vec2(-1.3737084377126254f, 15.494495502634818f), glm::vec2(-1.3737084377126259f, 15.494495502634825f), glm::vec2(-1.3737084377126263f, 15.494495502634832f), glm::vec2(-1.373708437712627f, 15.494495502634818f), glm::vec2(-1.3737084377126263f, 15.494495502634825f), glm::vec2(-1.3737084377126256f, 15.494495502634832f), glm::vec2(-1.3737084377126256f, 15.494495502634839f), glm::vec2(-1.3737084377126256f, 15.494495502634832f), glm::vec2(-1.3737084377126256f, 15.494495502634825f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126265f, 19.615620815772715f), glm::vec2(1.3737084377126267f, 19.615620815772715f), glm::vec2(1.3737084377126267f, 19.615620815772708f), glm::vec2(1.3737084377126267f, 19.615620815772708f), glm::vec2(1.3737084377126267f, 19.615620815772708f), glm::vec2(1.3737084377126261f, 19.615620815772722f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126265f, 19.615620815772708f), glm::vec2(1.3737084377126272f, 19.615620815772715f), glm::vec2(1.3737084377126267f, 19.615620815772711f), glm::vec2(1.3737084377126263f, 19.615620815772708f), glm::vec2(1.3737084377126272f, 19.615620815772701f), glm::vec2(1.3737084377126267f, 19.615620815772708f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126252f, 19.615620815772729f), glm::vec2(1.3737084377126259f, 19.615620815772719f), glm::vec2(1.3737084377126265f, 19.615620815772708f), glm::vec2(1.3737084377126267f, 19.615620815772711f), glm::vec2(1.3737084377126267f, 19.615620815772715f), glm::vec2(1.3737084377126267f, 19.615620815772719f), glm::vec2(1.3737084377126263f, 19.615620815772719f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126263f, 19.615620815772711f), glm::vec2(1.3737084377126263f, 19.615620815772722f), glm::vec2(1.3737084377126263f, 19.615620815772715f), glm::vec2(1.3737084377126263f, 19.615620815772708f), glm::vec2(-1.3737084377126259f, 15.494495502634832f), glm::vec2(-1.3737084377126254f, 15.494495502634832f), glm::vec2(-1.373708437712625f, 15.494495502634832f), glm::vec2(-1.3737084377126256f, 15.494495502634825f), glm::vec2(-1.3737084377126256f, 15.49449550263483f), glm::vec2(-1.3737084377126256f, 15.494495502634836f), glm::vec2(-1.3737084377126256f, 15.49449550263482f), glm::vec2(-1.3737084377126256f, 15.494495502634825f), glm::vec2(-1.3737084377126256f, 15.49449550263483f), glm::vec2(-1.3737084377126243f, 15.494495502634825f), glm::vec2(-1.373708437712625f, 15.494495502634825f), glm::vec2(-1.3737084377126256f, 15.494495502634825f), glm::vec2(-1.3737084377126259f, 15.494495502634825f), glm::vec2(-1.3737084377126259f, 15.494495502634825f), glm::vec2(-1.3737084377126259f, 15.494495502634825f), glm::vec2(-1.3737084377126259f, 15.494495502634825f) },
      };
    default:break;
    }
    break;
  case themes::glass:
    switch (objectsID) {
    case objects::white_pawn:
    case objects::black_pawn:
      return std::vector<std::vector<glm::vec2>> {
        // profile curve
        std::vector<glm::vec2> { glm::vec2(-0, 0), glm::vec2(-0, 0), glm::vec2(-2, 0), glm::vec2(-3, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-5.92803575287419f, 0.10548971690183961f), glm::vec2(-5.9574785005821891f, 1.1948713820978307f), glm::vec2(-5.9869212482901881f, 2.2842530472938218f), glm::vec2(-5.986921248290189f, 2.8436652537458182f), glm::vec2(-5.8544288836041893f, 2.9172721230158167f), glm::vec2(-5.7219365189181897f, 2.9908789922858152f), glm::vec2(-5.5600014065241918f, 3.2853064693658123f), glm::vec2(-5.7808220143341904f, 3.4766843294678114f), glm::vec2(-6.001642622144189f, 3.6680621895698104f), glm::vec2(-5.9574785005821909f, 4.1980316483138074f), glm::vec2(-5.6924937712101915f, 4.4630163776858041f), glm::vec2(-5.4275090418381922f, 4.7280011070578007f), glm::vec2(-4.4264556197662026f, 5.9645965107937897f), glm::vec2(-4.1614708903942041f, 6.950928559011782f), glm::vec2(-3.8964861610222057f, 7.9372606072297742f), glm::vec2(-3.0573678513442131f, 10.01297432064376f), glm::vec2(-3.2045815898842118f, 10.248516302307756f), glm::vec2(-3.3517953284242106f, 10.484058283971752f), glm::vec2(-3.6756655532122062f, 10.54294377938775f), glm::vec2(-3.6609441793582072f, 10.881535378029749f), glm::vec2(-3.6462228055042081f, 11.220126976671748f), glm::vec2(-3.2929098330082098f, 11.352619341357745f), glm::vec2(-3.0868105990522121f, 11.529275827605744f), glm::vec2(-2.8807113650962144f, 11.705932313853744f), glm::vec2(-2.5273983926002179f, 11.897310173955741f), glm::vec2(-2.7923831219722151f, 12.515607875823736f), glm::vec2(-3.0573678513442122f, 13.133905577691731f), glm::vec2(-3.3076312068622116f, 13.796367401121721f), glm::vec2(-2.9690396082202142f, 14.326336859865719f), glm::vec2(-2.6304480095782168f, 14.856306318609718f), glm::vec2(-2, 16), glm::vec2(-0, 16), glm::vec2(-0, 16) }
      };
    case objects::white_rook:
    case objects::black_rook:
      return std::vector<std::vector<glm::vec2>> {
        // large curve
        std::vector<glm::vec2> { glm::vec2(-0, 0), glm::vec2(-0, 0), glm::vec2(-2, 0), glm::vec2(-3, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-5.4569646752139125f, 0.32625572442488959f), glm::vec2(-5.4569646752139125f, 1.8867445034705428f), glm::vec2(-5.4569646752139125f, 3.447233282516196f), glm::vec2(-4.6325555089256447f, 3.947767419191214f), glm::vec2(-4.6325555089256447f, 4.4335799636110895f), glm::vec2(-4.6325555089256447f, 4.9193925080309651f), glm::vec2(-5.4569646752139134f, 4.8899493235206677f), glm::vec2(-5.3833567139381753f, 5.2579891298993608f), glm::vec2(-5.3097487526624372f, 5.626028936278054f), glm::vec2(-4.1172997799954736f, 6.259057403249404f), glm::vec2(-3.8081463426373734f, 7.2601256765994453f), glm::vec2(-3.4989929052792732f, 8.2611939499494866f), glm::vec2(-2.9984587686042512f, 10.999410109406957f), glm::vec2(-2.9395723995836605f, 13.045711432872483f), glm::vec2(-2.8806860305630697f, 15.09201275633801f), glm::vec2(-3.1015099143902849f, 15.739762815564507f), glm::vec2(-3.1162315066454322f, 16.019473068412314f), glm::vec2(-3.1309530989005796f, 16.29918332126012f), glm::vec2(-3.4401065362586802f, 16.726109496659404f), glm::vec2(-3.4253849440035329f, 16.946933380486616f), glm::vec2(-3.4106633517483855f, 17.167757264313828f), glm::vec2(-3.7934247503822238f, 17.462189109416784f), glm::vec2(-3.8523111194028155f, 17.74189936226459f), glm::vec2(-3.9111974884234071f, 18.021609615112396f), glm::vec2(-4.308680479312395f, 18.212990314429319f), glm::vec2(-4.3381236638226897f, 18.698802858849191f), glm::vec2(-4.3675668483329844f, 19.184615403269063f), glm::vec2(-4.3086804793123941f, 19.449604063861724f), glm::vec2(-3.8670327116579641f, 19.479047248372019f), glm::vec2(-3.4253849440035342f, 19.508490432882315f), glm::vec2(-3.1178684562849908f, 18.455829461354408f), glm::vec2(-2.4852317865218878f, 18.433631683467983f), glm::vec2(-1.8525951167587849f, 18.411433905581557f), glm::vec2(-1, 18.422857774952959f), glm::vec2(-0, 18.422857774952959f), glm::vec2(-0, 18.422857774952959f) },
          // small curve
          std::vector<glm::vec2> { glm::vec2(-0, 0), glm::vec2(-0, 0), glm::vec2(-2, 0), glm::vec2(-3, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-5.4569646752139125f, 0.32625572442488959f), glm::vec2(-5.4569646752139125f, 1.8867445034705428f), glm::vec2(-5.4569646752139125f, 3.447233282516196f), glm::vec2(-4.6325555089256447f, 3.947767419191214f), glm::vec2(-4.6325555089256447f, 4.4335799636110895f), glm::vec2(-4.6325555089256447f, 4.9193925080309651f), glm::vec2(-5.4569646752139134f, 4.8899493235206677f), glm::vec2(-5.3833567139381753f, 5.2579891298993608f), glm::vec2(-5.3097487526624372f, 5.626028936278054f), glm::vec2(-4.1172997799954736f, 6.259057403249404f), glm::vec2(-3.8081463426373734f, 7.2601256765994453f), glm::vec2(-3.4989929052792732f, 8.2611939499494866f), glm::vec2(-2.9984587686042512f, 10.999410109406957f), glm::vec2(-2.9395723995836605f, 13.045711432872483f), glm::vec2(-2.8806860305630697f, 15.09201275633801f), glm::vec2(-3.1015099143902849f, 15.739762815564507f), glm::vec2(-3.1162315066454322f, 16.019473068412314f), glm::vec2(-3.1309530989005796f, 16.29918332126012f), glm::vec2(-3.4401065362586802f, 16.726109496659404f), glm::vec2(-3.4253849440035329f, 16.946933380486616f), glm::vec2(-3.4106633517483855f, 17.167757264313828f), glm::vec2(-3.7934247503822238f, 17.462189109416784f), glm::vec2(-3.8523111194028155f, 17.74189936226459f), glm::vec2(-3.9111974884234071f, 18.021609615112396f), glm::vec2(-3.920001739392811f, 18.089181568624223f), glm::vec2(-3.9273636619862033f, 18.210653291449628f), glm::vec2(-3.9347255845819795f, 18.332125014294022f), glm::vec2(-3.377227997218716f, 18.437374978102078f), glm::vec2(-3.289587491682413f, 18.44321767852394f), glm::vec2(-3.2019469861404368f, 18.449060378810064f), glm::vec2(-3.1178684562849908f, 18.455829461354408f), glm::vec2(-2.4852317865218878f, 18.433631683467983f), glm::vec2(-1.8525951167587849f, 18.411433905581557f), glm::vec2(-1, 18.422857774952959f), glm::vec2(-0, 18.422857774952959f), glm::vec2(-0, 18.422857774952959f) }
      };
    case objects::white_bishop:
    case objects::black_bishop:
      return std::vector<std::vector<glm::vec2>> {
        std::vector<glm::vec2> { glm::vec2(-0, 0), glm::vec2(-0, 0), glm::vec2(-1, 0), glm::vec2(-2.7927018779260582f, 0), glm::vec2(-3.7927018779260582f, 0), glm::vec2(-4.7927018779260582f, 0), glm::vec2(-5.5408569953622537f, 0.48217560944229998f), glm::vec2(-5.5620722163469525f, 1.5825475199660932f), glm::vec2(-5.5832874373316512f, 2.6829194304898865f), glm::vec2(-5.6257178793010558f, 4.3829566899466528f), glm::vec2(-5.4772113324081459f, 4.4678175738854575f), glm::vec2(-5.3287047855152361f, 4.5526784578242623f), glm::vec2(-5.2014134596070321f, 5.3164264132735033f), glm::vec2(-5.4984265533928482f, 5.5497938441052179f), glm::vec2(-5.7954396471786644f, 5.7831612749369325f), glm::vec2(-5.5832874373316557f, 6.4620483464473679f), glm::vec2(-5.3074895645305373f, 6.9075679871260949f), glm::vec2(-5.031691691729419f, 7.3530876278048218f), glm::vec2(-4.0770067474178671f, 9.3048879583973321f), glm::vec2(-3.8860697585555553f, 10.620231659448807f), glm::vec2(-3.6951327696932434f, 11.935575360500282f), glm::vec2(-3.0471460421208008f, 16.140615013434584f), glm::vec2(-3.3217843301535943f, 16.501077766477625f), glm::vec2(-3.5964226181863879f, 16.861540519520666f), glm::vec2(-3.4247736881658897f, 17.39365220258421f), glm::vec2(-3.2874545441494938f, 17.479476667594454f), glm::vec2(-3.1501354001330979f, 17.565301132604699f), glm::vec2(-2.6523535030736598f, 18.080247922666182f), glm::vec2(-2.6523535030736598f, 18.68101917773792f), glm::vec2(-2.6523535030736598f, 19.281790432809657f), glm::vec2(-3.0986407211269498f, 19.813902115873198f), glm::vec2(-3.0986407211269498f, 20.757971230985923f), glm::vec2(-3.0986407211269498f, 21.702040346098649f), glm::vec2(-2.7896726470900566f, 22.680439247215482f), glm::vec2(-2.3948801080429165f, 23.195386037276968f), glm::vec2(-2.0000875689957764f, 23.710332827338455f), glm::vec2(-1.1075131328891983f, 24.259609403404042f), glm::vec2(-1.0388535608809999f, 24.431258333424537f), glm::vec2(-0.9701939888728015f, 24.602907263445033f), glm::vec2(-1.0419428253125786f, 25.4914980350819f), glm::vec2(-0.90153441686460456f, 25.718625308578254f), glm::vec2(-0.76112600841662792f, 25.945752582074586f), glm::vec2(-0.61954254576633128f, 26.183957450398697f), glm::vec2(-0, 26.183957450398697f), glm::vec2(-0, 26.183957450398697f)}
      };
    case objects::white_queen:
    case objects::black_queen:
      return std::vector<std::vector<glm::vec2>> {
        // large curve
        std::vector<glm::vec2> { glm::vec2(-0, 0), glm::vec2(-0, 0), glm::vec2(-1, 0), glm::vec2(-3, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-5.5323538085395967f, 0.78949338577086969f), glm::vec2(-5.5093675636047514f, 1.7319294280996065f), glm::vec2(-5.4863813186699062f, 2.6743654704283433f), glm::vec2(-5.5506556357852626f, 3.6794167334545813f), glm::vec2(-5.3730255128237046f, 3.8408986634196349f), glm::vec2(-5.1953953898621466f, 4.0023805933846885f), glm::vec2(-5.114654424879622f, 4.3414926463113002f), glm::vec2(-5.3891737058202107f, 4.6967528922344153f), glm::vec2(-5.6636929867607995f, 5.0520131381575304f), glm::vec2(-5.7928785307328416f, 5.6656444720247325f), glm::vec2(-5.4699146708027362f, 6.1339420689233854f), glm::vec2(-5.1469508108726307f, 6.6022396658220384f), glm::vec2(-4.4848748980159163f, 7.1351300347067124f), glm::vec2(-4.4525785120229049f, 7.5388348596193442f), glm::vec2(-4.4202821260298935f, 7.942539684531976f), glm::vec2(-4.6188141209138092f, 8.2193674134209687f), glm::vec2(-4.6188141209138092f, 8.4477232067146382f), glm::vec2(-4.6188141209138092f, 8.6760790000083077f), glm::vec2(-4.4596570528606465f, 9.0013130086386894f), glm::vec2(-4.3281794749036866f, 9.0981912239753964f), glm::vec2(-4.1967018969467267f, 9.1950694393121033f), glm::vec2(-3.8291253184751444f, 10.659545051289083f), glm::vec2(-3.7054828293950521f, 12.569134604859386f), glm::vec2(-3.5818403403149599f, 14.478724158429689f), glm::vec2(-3.389507579523706f, 17.363715570298496f), glm::vec2(-3.3620314708392418f, 17.954451907014487f), glm::vec2(-3.3345553621547777f, 18.545188243730479f), glm::vec2(-3.7192208837372842f, 18.737521004521735f), glm::vec2(-3.9390297532130023f, 19.026020145708614f), glm::vec2(-4.1588386226887204f, 19.314519286895493f), glm::vec2(-4.2137908400576505f, 20.344873362562925f), glm::vec2(-3.8016492097906784f, 20.702062775460966f), glm::vec2(-3.3895075795237064f, 21.059252188359007f), glm::vec2(-2.954017502371622f, 21.338771928243542f), glm::vec2(-2.9415295693771046f, 21.832045281526963f), glm::vec2(-2.9290416363825873f, 22.325318634810383f), glm::vec2(-2.954017502371622f, 22.674980758656854f), glm::vec2(-3.1163606313003425f, 22.781128189110252f), glm::vec2(-3.278703760229063f, 22.887275619563649f), glm::vec2(-3.2724597937318038f, 23.486696403300456f), glm::vec2(-3.1101166648030834f, 23.592843833753854f), glm::vec2(-2.9477735358743629f, 23.698991264207251f), glm::vec2(-2.7666985074538673f, 24.048653388053726f), glm::vec2(-2.7479666079620921f, 24.473243109867301f), glm::vec2(-2.729234708470317f, 24.897832831680876f), glm::vec2(-2.8790899044045215f, 25.540961380898501f), glm::vec2(-3.2349959947482549f, 26.003014901695629f), glm::vec2(-3.5909020850919884f, 26.465068422492756f), glm::vec2(-4.1903228688288028f, 27.120684904704898f), glm::vec2(-4.1840789023315441f, 27.420395296573307f), glm::vec2(-4.1778349358342854f, 27.720105688441716f), glm::vec2(-3.9967599074137894f, 28.150939376752547f), glm::vec2(-3.3723632576879403f, 28.157183343249805f), glm::vec2(-2.7479666079620912f, 28.163427309747064f), glm::vec2(-2.5044519145690112f, 27.008293507754249f), glm::vec2(-2.1235699582362435f, 26.983317641765211f), glm::vec2(-1.7426880019034758f, 26.958341775776173f), glm::vec2(-1.586588839472014f, 28.531821333085311f), glm::vec2(-1.3867819115597424f, 28.906459322920821f), glm::vec2(-1.1869749836474708f, 29.28109731275633f), glm::vec2(-1, 30), glm::vec2(-0, 30), glm::vec2(-0, 30) },
          // small curve
          std::vector<glm::vec2> { glm::vec2(-0, 0), glm::vec2(-0, 0), glm::vec2(-1, 0), glm::vec2(-3, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-5.5323538085395967f, 0.78949338577086969f), glm::vec2(-5.5093675636047514f, 1.7319294280996065f), glm::vec2(-5.4863813186699062f, 2.6743654704283433f), glm::vec2(-5.5506556357852626f, 3.6794167334545813f), glm::vec2(-5.3730255128237046f, 3.8408986634196349f), glm::vec2(-5.1953953898621466f, 4.0023805933846885f), glm::vec2(-5.114654424879622f, 4.3414926463113002f), glm::vec2(-5.3891737058202107f, 4.6967528922344153f), glm::vec2(-5.6636929867607995f, 5.0520131381575304f), glm::vec2(-5.7928785307328416f, 5.6656444720247325f), glm::vec2(-5.4699146708027362f, 6.1339420689233854f), glm::vec2(-5.1469508108726307f, 6.6022396658220384f), glm::vec2(-4.4848748980159163f, 7.1351300347067124f), glm::vec2(-4.4525785120229049f, 7.5388348596193442f), glm::vec2(-4.4202821260298935f, 7.942539684531976f), glm::vec2(-4.6188141209138092f, 8.2193674134209687f), glm::vec2(-4.6188141209138092f, 8.4477232067146382f), glm::vec2(-4.6188141209138092f, 8.6760790000083077f), glm::vec2(-4.4596570528606465f, 9.0013130086386894f), glm::vec2(-4.3281794749036866f, 9.0981912239753964f), glm::vec2(-4.1967018969467267f, 9.1950694393121033f), glm::vec2(-3.8291253184751444f, 10.659545051289083f), glm::vec2(-3.7054828293950521f, 12.569134604859386f), glm::vec2(-3.5818403403149599f, 14.478724158429689f), glm::vec2(-3.389507579523706f, 17.363715570298496f), glm::vec2(-3.3620314708392418f, 17.954451907014487f), glm::vec2(-3.3345553621547777f, 18.545188243730479f), glm::vec2(-3.7192208837372842f, 18.737521004521735f), glm::vec2(-3.9390297532130023f, 19.026020145708614f), glm::vec2(-4.1588386226887204f, 19.314519286895493f), glm::vec2(-4.2137908400576505f, 20.344873362562925f), glm::vec2(-3.8016492097906784f, 20.702062775460966f), glm::vec2(-3.3895075795237064f, 21.059252188359007f), glm::vec2(-2.954017502371622f, 21.338771928243542f), glm::vec2(-2.9415295693771046f, 21.832045281526963f), glm::vec2(-2.9290416363825873f, 22.325318634810383f), glm::vec2(-2.954017502371622f, 22.674980758656854f), glm::vec2(-3.1163606313003425f, 22.781128189110252f), glm::vec2(-3.278703760229063f, 22.887275619563649f), glm::vec2(-3.2724597937318038f, 23.486696403300456f), glm::vec2(-3.1101166648030834f, 23.592843833753854f), glm::vec2(-2.9477735358743629f, 23.698991264207251f), glm::vec2(-2.7666985074538673f, 24.048653388053726f), glm::vec2(-2.7479666079620921f, 24.473243109867301f), glm::vec2(-2.729234708470317f, 24.897832831680876f), glm::vec2(-2.8790899044045215f, 25.540961380898501f), glm::vec2(-3.2349959947482549f, 26.003014901695629f), glm::vec2(-3.5909020850919884f, 26.465068422492756f), glm::vec2(-3.5299513117366503f, 26.422577830064618f), glm::vec2(-3.5237073452393917f, 26.722288221933027f), glm::vec2(-3.5174633787421339f, 27.021998613801436f), glm::vec2(-3.0219168645683099f, 26.94749091800885f), glm::vec2(-2.8063304944660969f, 26.94964678170987f), glm::vec2(-2.5907441243638836f, 26.95180264541089f), glm::vec2(-2.5044519145690112f, 27.008293507754249f), glm::vec2(-2.1235699582362435f, 26.983317641765211f), glm::vec2(-1.7426880019034758f, 26.958341775776173f), glm::vec2(-1.586588839472014f, 28.531821333085311f), glm::vec2(-1.3867819115597424f, 28.906459322920821f), glm::vec2(-1.1869749836474708f, 29.28109731275633f), glm::vec2(-1, 30), glm::vec2(-0, 30), glm::vec2(-0, 30) }
      };
    case objects::white_king:
    case objects::black_king:
      return std::vector<std::vector<glm::vec2>> {
        // base curve
        std::vector<glm::vec2> { glm::vec2(-0, 0), glm::vec2(-0, 0), glm::vec2(-1, 0), glm::vec2(-3, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-5.8663996484782155f, 0.31563273312560725f), glm::vec2(-5.9255545651674133f, 1.9916887059862916f), glm::vec2(-5.9847094818566111f, 3.6677446788469759f), glm::vec2(-5.6297799817214056f, 3.7663362066623085f), glm::vec2(-5.6100616761583408f, 4.3184487624281811f), glm::vec2(-5.5903433705952761f, 4.8705613181940537f), glm::vec2(-6.4382305098071493f, 5.3635189572707258f), glm::vec2(-6.2804840653026153f, 5.9945047352888654f), glm::vec2(-6.1227376207980813f, 6.625490513307005f), glm::vec2(-5.1355705099253219f, 7.5579726320288465f), glm::vec2(-5.1355705099253219f, 7.91453691995196f), glm::vec2(-5.1355705099253219f, 8.2711012078750734f), glm::vec2(-5.4386501546599746f, 8.8950887117405308f), glm::vec2(-5.1533987243214794f, 9.1446837132867103f), glm::vec2(-4.8681472939829842f, 9.3942787148328897f), glm::vec2(-4.5472394348521821f, 11.426695155994651f), glm::vec2(-4.351129076494467f, 13.173860166817921f), glm::vec2(-4.1550187181367519f, 14.921025177641191f), glm::vec2(-3.2636079983289665f, 19.556360920641708f), glm::vec2(-3.7806262158174841f, 19.716814850207108f), glm::vec2(-4.2976444333060018f, 19.877268779772507f), glm::vec2(-4.6363805068329649f, 20.839992357164924f), glm::vec2(-4.0837058605521328f, 20.946961643541858f), glm::vec2(-3.5310312142713007f, 21.053930929918792f), glm::vec2(-2.8179026384250685f, 21.481808075426532f), glm::vec2(-2.7822462096327572f, 21.87402879214196f), glm::vec2(-2.7465897808404458f, 22.266249508857388f), glm::vec2(-3.3170926415174287f, 22.49801629600741f), glm::vec2(-3.3349208559135861f, 22.836752369534373f), glm::vec2(-3.3527490703097436f, 23.175488443061337f), glm::vec2(-2.5326512080865737f, 23.460739873399831f), glm::vec2(-2.5861358512750425f, 23.817304161322944f), glm::vec2(-2.6396204944635113f, 24.173868449246058f), glm::vec2(-3.0496694255750905f, 25.118763812242321f), glm::vec2(-3.6380005006482348f, 25.974518103257797f), glm::vec2(-4.2263315757213791f, 26.830272394273273f), glm::vec2(-4.5828958636444934f, 27.507744541327195f), glm::vec2(-3.9410801453828839f, 27.507744541327195f), glm::vec2(-3.2992644271212743f, 27.507744541327195f), glm::vec2(-1, 27.507744541327195f), glm::vec2(-0, 27.507744541327195f), glm::vec2(-0, 27.507744541327195f)},
          // profile curve
          std::vector<glm::vec2> { glm::vec2(0, 27.514772753493254f), glm::vec2(0, 27.514772753493254f), glm::vec2(-2.3011076041893435f, 27.514772753493254f), glm::vec2(-2.3747086010087939f, 27.585269676160173f), glm::vec2(-2.3747086010087939f, 28.005031035274293f), glm::vec2(-2.3747086010087939f, 28.424792394388412f), glm::vec2(-2.4607079945651118f, 28.539608388075884f), glm::vec2(-3.1901874497149554f, 28.539608388075884f), glm::vec2(-3.9196669048647981f, 28.539608388075884f), glm::vec2(-4.1044030018684969f, 28.591911136411525f), glm::vec2(-4.1044030018684969f, 29.856352194526465f), glm::vec2(-4.1044030018684969f, 31.120793252641409f), glm::vec2(-3.9810879594464694f, 31.239653171277496f), glm::vec2(-3.1234976024735754f, 31.239653171277496f), glm::vec2(-2.265907245500681f, 31.239653171277496f), glm::vec2(-2.2010089479406152f, 31.451239787254501f), glm::vec2(-2.2010089479406152f, 32.48356077079594f), glm::vec2(-2.2010089479406152f, 33.515881754337379f), glm::vec2(-1.9604933673650731f, 33.738397818296846f), glm::vec2(0.12902618405321831f, 33.738397818296846f), glm::vec2(2.2185457354715084f, 33.738397818296846f), glm::vec2(2.6310769472028772f, 33.515881754337379f), glm::vec2(2.6310769472028772f, 32.48356077079594f), glm::vec2(2.6310769472028772f, 31.451239787254501f), glm::vec2(2.7516926109596955f, 31.239653171277496f), glm::vec2(3.4647738300870552f, 31.239653171277496f), glm::vec2(4.1778550492144149f, 31.239653171277496f), glm::vec2(4.287126301498466f, 31.136500866579421f), glm::vec2(4.287126301498466f, 29.856352194526465f), glm::vec2(4.287126301498466f, 28.576203522473509f), glm::vec2(4.1728805005455447f, 28.614883358725681f), glm::vec2(3.4671766291020809f, 28.614883358725681f), glm::vec2(2.7614727576586171f, 28.614883358725681f), glm::vec2(2.6310769472028772f, 28.438222074095954f), glm::vec2(2.6310769472028772f, 28.005031035274293f), glm::vec2(2.6310769472028772f, 27.571839996452621f), glm::vec2(2.3011076041893435f, 27.514772753493254f), glm::vec2(0, 27.514772753493254f), glm::vec2(0, 27.514772753493254f) },
          // profile curve compressed
          std::vector<glm::vec2> { glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29), glm::vec2(0, 29)}
      };
    case objects::white_knight:
    case objects::black_knight:
      return std::vector<std::vector<glm::vec2>> {
        // base curve
        std::vector<glm::vec2> { glm::vec2(-0, 0), glm::vec2(-0, 0), glm::vec2(-2, 0), glm::vec2(-3, 0), glm::vec2(-4, 0), glm::vec2(-5, 0), glm::vec2(-5.2905275760337247f, 0.65306265625338344f), glm::vec2(-5.3228146831053316f, 1.9929775997250241f), glm::vec2(-5.3551017901769384f, 3.3328925431966647f), glm::vec2(-4.8869387376386548f, 4.0754960058435969f), glm::vec2(-4.8869387376386548f, 4.5920897189892891f), glm::vec2(-4.8869387376386548f, 5.1086834321349812f), glm::vec2(-5.4519631113917537f, 5.0118221109201659f), glm::vec2(-5.4519631113917537f, 5.3669802887078282f), glm::vec2(-5.4519631113917537f, 5.7221384664954904f), glm::vec2(-4.6124983275300062f, 6.8199001069300902f), glm::vec2(-3.9990432931694957f, 6.8521872140016944f), glm::vec2(-3.3855882588089852f, 6.8844743210732986f), glm::vec2(-1, 6.8708515717135761f), glm::vec2(-0, 6.8708515717135761f), glm::vec2(-0, 6.8708515717135761f) },
          // profile curve
          std::vector<glm::vec2> { glm::vec2(0, 6.8744937940671962f), glm::vec2(0, 6.8744937940671962f), glm::vec2(-0.37015438713204607f, 6.8744937940671953f), glm::vec2(-2.416668847185532f, 6.8744937940671962f), glm::vec2(-3, 6.8744937940671962f), glm::vec2(-3.583331152814468f, 6.8744937940671962f), glm::vec2(-3.6607563752994343f, 7.2817570844237096f), glm::vec2(-3.6707605479246253f, 7.8019740609336132f), glm::vec2(-3.6807647205498162f, 8.3221910374435168f), glm::vec2(-4.4322228803750905f, 8.7123537698259401f), glm::vec2(-4.9024189937590403f, 9.0725039843327941f), glm::vec2(-5.3726151071429902f, 9.4326541988396482f), glm::vec2(-5.752773666900227f, 10.082925419477027f), glm::vec2(-5.7627778395254179f, 10.983300955744166f), glm::vec2(-5.7727820121506088f, 11.883676492011306f), glm::vec2(-5.5326818691460389f, 12.173797498141852f), glm::vec2(-5.1425191367636121f, 13.30426900478837f), glm::vec2(-4.7523564043811852f, 14.434740511434889f), glm::vec2(-4.6323063328788994f, 16.11544151246688f), glm::vec2(-4.6523146781292803f, 17.035825393984403f), glm::vec2(-4.6723230233796613f, 17.956209275501926f), glm::vec2(-4.7023355412552332f, 18.896601502269814f), glm::vec2(-4.4422270530002823f, 19.656918621784286f), glm::vec2(-4.1821185647453314f, 20.417235741298757f), glm::vec2(-2.6514801530911947f, 21.1075236524369f), glm::vec2(-2.4814092184629573f, 21.227573723939187f), glm::vec2(-2.3113382838347198f, 21.347623795441475f), glm::vec2(-2.4914133910881477f, 21.987890843453659f), glm::vec2(-2.1712798670820534f, 22.428074438962039f), glm::vec2(-1.8511463430759592f, 22.868258034470418f), glm::vec2(-0.70066649117905977f, 22.498103647338372f), glm::vec2(-0.56060807442639393f, 22.388057748461279f), glm::vec2(-0.42054965767372809f, 22.278011849584185f), glm::vec2(-0.24047455042029992f, 21.247582069189566f), glm::vec2(-0.10041613366763413f, 21.117527825062091f), glm::vec2(0.039642283085031649f, 20.987473580934616f), glm::vec2(0.62988846797126818f, 20.927448545183474f), glm::vec2(1.0800762361048368f, 20.787390128430811f), glm::vec2(1.5302640042384055f, 20.647331711678149f), glm::vec2(3.0809107611429249f, 17.946205102876718f), glm::vec2(3.0909149337681159f, 17.4459964716172f), glm::vec2(3.1009191063933068f, 16.945787840357681f), glm::vec2(1.6403099031155026f, 16.075424821966109f), glm::vec2(1.2101304802323143f, 15.985387268339398f), glm::vec2(0.77995105734912595f, 15.895349714712687f), glm::vec2(-0.31050375879663217f, 16.075424821966116f), glm::vec2(-0.47057052079967909f, 15.725278780084452f), glm::vec2(-0.63063728280272602f, 15.375132738202787f), glm::vec2(-0.42054965767372754f, 14.624819791313502f), glm::vec2(-0.22046620516991799f, 14.224652886305886f), glm::vec2(-0.02038275266610845f, 13.82448598129827f), glm::vec2(3.4210526303993989f, 11.393472033376987f), glm::vec2(4.0413113331612056f, 10.893263402117467f), glm::vec2(4.6615700359230123f, 10.393054770857947f), glm::vec2(4.4314740655436333f, 9.4526625440900442f), glm::vec2(4.1113405415375386f, 9.1725457105847124f), glm::vec2(3.7912070175314438f, 8.8924288770793805f), glm::vec2(3.7211778091551131f, 8.6523287340748087f), glm::vec2(3.7211778091551131f, 7.9720449955618591f), glm::vec2(3.7211778091551131f, 7.2917612570489094f), glm::vec2(3.5853429154692327f, 6.8744937940671962f), glm::vec2(3, 6.8744937940671962f), glm::vec2(2.4146570845307673f, 6.8744937940671962f), glm::vec2(2, 6.8744937940671962f), glm::vec2(0, 6.8744937940671962f), glm::vec2(0, 6.8744937940671962f) },
          // profile face curve
          std::vector<glm::vec2> { glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 20.46f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f), glm::vec2(-2.34f, 8.018f) }
      };
    default:break;
    }
    break;
  default:break;
  }
  std::cerr << "ChessWarn: No control points found for object id: " << objectsID << " in theme: " << theme_id_ << std::endl;
  return std::vector<std::vector<glm::vec2>>();
}
